[{"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reportWebVitals.js":"1","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\App.js":"2","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\index.js":"3","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Footer.js":"4","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Header.js":"5","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Product.js":"6","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Rating.js":"7","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\HomeScreen.js":"8","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\store.js":"10","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Loader.js":"11","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\productConstants.js":"12","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\productActions.js":"13","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\CartScreen.js":"14","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\productReducers.js":"15","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\cartActions.js":"17","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\userConstants.js":"18","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\LoginScreen.js":"19","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\userActions.js":"20","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\userReducers.js":"21","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Message.js":"22","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\FormContainer.js":"23","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\cartConstants.js":"24","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\RgisterScreen.js":"25","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProfileScreen.js":"26","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ShippingScreen.js":"27","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PaymentScreen.js":"29","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\orderReducer.js":"31","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\orderAction.js":"32","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\orderConstants.js":"33","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderScreen.js":"34","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UserEditScreen.js":"35","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\common\\constants.js":"36","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductListScreen.js":"37","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UserListScreen.js":"38","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductCreateScreen.js":"39","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductEditScreen.js":"40","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderListScreen.js":"41","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\roleConstants.js":"42","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\roleReducer.js":"43","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\roleAction.js":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"46"},{"size":2346,"mtime":1609094002934,"results":"47","hashOfConfig":"46"},{"size":385,"mtime":1606718542940,"results":"48","hashOfConfig":"46"},{"size":356,"mtime":1606416340572,"results":"49","hashOfConfig":"46"},{"size":2590,"mtime":1609870290006,"results":"50","hashOfConfig":"46"},{"size":903,"mtime":1608713036911,"results":"51","hashOfConfig":"46"},{"size":1805,"mtime":1606467938294,"results":"52","hashOfConfig":"46"},{"size":1105,"mtime":1608352320245,"results":"53","hashOfConfig":"46"},{"size":3373,"mtime":1607844448138,"results":"54","hashOfConfig":"46"},{"size":2474,"mtime":1609783551871,"results":"55","hashOfConfig":"46"},{"size":413,"mtime":1606746418066,"results":"56","hashOfConfig":"46"},{"size":1132,"mtime":1608303600573,"results":"57","hashOfConfig":"46"},{"size":3845,"mtime":1608746807474,"results":"58","hashOfConfig":"46"},{"size":3690,"mtime":1607848867357,"results":"59","hashOfConfig":"46"},{"size":2739,"mtime":1608303802411,"results":"60","hashOfConfig":"46"},{"size":1222,"mtime":1607235765101,"results":"61","hashOfConfig":"46"},{"size":1350,"mtime":1607849186385,"results":"62","hashOfConfig":"46"},{"size":1536,"mtime":1608143698353,"results":"63","hashOfConfig":"46"},{"size":2217,"mtime":1607069437563,"results":"64","hashOfConfig":"46"},{"size":6244,"mtime":1608182174016,"results":"65","hashOfConfig":"46"},{"size":3532,"mtime":1608143738430,"results":"66","hashOfConfig":"46"},{"size":256,"mtime":1606722592995,"results":"67","hashOfConfig":"46"},{"size":352,"mtime":1607019156033,"results":"68","hashOfConfig":"46"},{"size":244,"mtime":1607235620594,"results":"69","hashOfConfig":"46"},{"size":3647,"mtime":1607084682177,"results":"70","hashOfConfig":"46"},{"size":6327,"mtime":1608182932748,"results":"71","hashOfConfig":"46"},{"size":2644,"mtime":1607234760906,"results":"72","hashOfConfig":"46"},{"size":1302,"mtime":1607234605230,"results":"73","hashOfConfig":"46"},{"size":1843,"mtime":1607235977402,"results":"74","hashOfConfig":"46"},{"size":5044,"mtime":1607883225891,"results":"75","hashOfConfig":"46"},{"size":2533,"mtime":1609094291880,"results":"76","hashOfConfig":"46"},{"size":4138,"mtime":1609094216967,"results":"77","hashOfConfig":"46"},{"size":985,"mtime":1609093386703,"results":"78","hashOfConfig":"46"},{"size":5442,"mtime":1607935306837,"results":"79","hashOfConfig":"46"},{"size":4445,"mtime":1609869827089,"results":"80","hashOfConfig":"46"},{"size":161,"mtime":1609870362141,"results":"81","hashOfConfig":"46"},{"size":3660,"mtime":1609870247637,"results":"82","hashOfConfig":"46"},{"size":3380,"mtime":1609870188475,"results":"83","hashOfConfig":"46"},{"size":4408,"mtime":1608747384439,"results":"84","hashOfConfig":"46"},{"size":4934,"mtime":1608317961428,"results":"85","hashOfConfig":"46"},{"size":2905,"mtime":1609870509904,"results":"86","hashOfConfig":"46"},{"size":210,"mtime":1609783414606,"results":"87","hashOfConfig":"46"},{"size":559,"mtime":1609783535124,"results":"88","hashOfConfig":"46"},{"size":819,"mtime":1609785875810,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"glfxjd",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reportWebVitals.js",[],["188","189"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\App.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\index.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Footer.js",[],["190","191"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Header.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Product.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Rating.js",[],["192","193"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductScreen.js",["194","195"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { listProductDetails } from '../actions/productActions';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match, dispatch]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>${product.price}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={product.countInStock === 0}\r\n                  onClick={addToCartHandler}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n              {product.quantityInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={qty}\r\n                        onChange={(e) => setQty(e.target.value)}\r\n                      >\r\n                        {[...Array(product.quantityInStock).keys()].map((i) => (\r\n                          <option key={i + 1} value={i + 1}>\r\n                            {i + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\store.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Loader.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\productConstants.js",[],["196","197"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\productActions.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\cartReducers.js",[],["198","199"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\userActions.js",["200","201"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Message.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\cartConstants.js",[],["202","203"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\RgisterScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProfileScreen.js",["204"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderAction';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMe = useSelector((state) => state.orderListMe);\r\n  const { loading: ordersLoading, error: ordersError, orders } = orderListMe;\r\n\r\n  let totalPrice = 0;\r\n  if (!ordersLoading) {\r\n    orders.map((order) => {\r\n      const itemsPrice = order.items.reduce(\r\n        (acc, item) => acc + Number(item.unitPrice),\r\n        0\r\n      );\r\n      totalPrice =\r\n        Number(itemsPrice) +\r\n        Number(order.shippingPrice) +\r\n        Number(order.taxPrice);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name || user.id !== userInfo.id) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setMobileNumber(user.mobile_number);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      //Dispatch Update Profile\r\n      dispatch(\r\n        updateUserProfile({ id: user.id, name, email, mobileNumber, password })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"mobile\">\r\n            <Form.Label>Mobile Number</Form.Label>\r\n            <Form.Control\r\n              type=\"mobile\"\r\n              placeholder=\"Enter Mobile Number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My Orders</h2>\r\n        {ordersLoading ? (\r\n          <Loader />\r\n        ) : ordersError ? (\r\n          <Message variant=\"danger\"> {ordersError}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => {\r\n                const itemsPrice = order.items.reduce(\r\n                  (acc, item) => acc + Number(item.unitPrice),\r\n                  0\r\n                );\r\n                totalPrice =\r\n                  Number(itemsPrice) +\r\n                  Number(order.shippingPrice) +\r\n                  Number(order.taxPrice);\r\n\r\n                return (\r\n                  <tr key={order.id}>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{totalPrice}</td>\r\n                    <td>\r\n                      {order.statusId === 1\r\n                        ? 'Created'\r\n                        : order.statusId === 2\r\n                        ? 'Paid'\r\n                        : 'Delivered'}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order.id}`}>\r\n                        <Button variant=\"info\" className=\"btn-sm\">\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["205","206","207"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckOutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderAction';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 25);\r\n  cart.taxPrice = addDecimals(cart.itemsPrice * 0.12);\r\n\r\n  cart.totalPrice = addDecimals(\r\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n  );\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      // history.push('/');\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = (e) => {\r\n    let data = cart.cartItems.map((item) => {\r\n      return {\r\n        productId: item.product,\r\n        unitPrice: item.price,\r\n        quantity: item.qty,\r\n      };\r\n    });\r\n\r\n    dispatch(createOrder(data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckOutSteps step1 step2 step3 step4 />\r\n      <h1>Place Order</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {success && <Message>Order Created</Message>}\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"warning\">Your Cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item Key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = {item.qty} * {item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\orderAction.js",["208"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderScreen.js",["209","210"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails } from '../actions/orderAction';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  let totalPrice = 0;\r\n  let itemsPrice = 0;\r\n\r\n  if (!loading) {\r\n    itemsPrice = order.items.reduce(\r\n      (acc, item) => Number(item.unitPrice) * item.quantity + acc,\r\n      0\r\n    );\r\n\r\n    totalPrice =\r\n      itemsPrice + Number(order.shippingPrice) + Number(order.taxPrice);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId));\r\n  }, [dispatch, orderId]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {orderId}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Customer Name: </strong> {order.customer.name}\r\n              </p>\r\n              <p>\r\n                <strong>Customer Email: </strong>\r\n                <a href={`mailto:${order.customer.email}`}>\r\n                  {order.customer.email}\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress === null ? (\r\n                  <p>Shipping Address was not provided</p>\r\n                ) : (\r\n                  <p>\r\n                    {order.shippingAddress.address},{order.shippingAddress.city}\r\n                    ,{order.shippingAddress.postalCode},\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                )}\r\n                {order.statusId > 3 ? (\r\n                  <Message variant=\"success\">Delivered</Message>\r\n                ) : order.statusId > 2 ? (\r\n                  <Message variant=\"warning\">Shipped Not Delivered</Message>\r\n                ) : (\r\n                  <Message variant=\"danger\">Not Shipped</Message>\r\n                )}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment</h2>\r\n              {order.statusId > 1 ? (\r\n                <>\r\n                  <Message variant=\"success\">\r\n                    Paid at {order.payment.createdAt}\r\n                  </Message>\r\n                  <p>\r\n                    <strong>Payment Method: </strong>\r\n                    {order.payment.paymentMethod.name}\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.items.length === 0 ? (\r\n                <Message variant=\"warning\">Your Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item Key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items Price</Col>\r\n                  <Col>${itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping Price</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax Price</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UserEditScreen.js",["211","212","213","214","215","216"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\common\\constants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UserListScreen.js",["217","218","219","220","221","222"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductCreateScreen.js",["223","224","225"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\roleConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\roleReducer.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\roleAction.js",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"226","replacedBy":"230"},{"ruleId":"228","replacedBy":"231"},{"ruleId":"226","replacedBy":"232"},{"ruleId":"228","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":21,"column":11,"nodeType":"236","messageId":"237","endLine":21,"endColumn":18},{"ruleId":"234","severity":1,"message":"238","line":21,"column":20,"nodeType":"236","messageId":"237","endLine":21,"endColumn":25},{"ruleId":"226","replacedBy":"239"},{"ruleId":"228","replacedBy":"240"},{"ruleId":"226","replacedBy":"241"},{"ruleId":"228","replacedBy":"242"},{"ruleId":"234","severity":1,"message":"243","line":27,"column":3,"nodeType":"236","messageId":"237","endLine":27,"endColumn":20},{"ruleId":"234","severity":1,"message":"244","line":234,"column":13,"nodeType":"236","messageId":"237","endLine":234,"endColumn":17},{"ruleId":"226","replacedBy":"245"},{"ruleId":"228","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":35,"column":24,"nodeType":"249","messageId":"250","endLine":35,"endColumn":26},{"ruleId":"234","severity":1,"message":"251","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"252","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":29},{"ruleId":"234","severity":1,"message":"253","line":30,"column":11,"nodeType":"236","messageId":"237","endLine":30,"endColumn":16},{"ruleId":"234","severity":1,"message":"254","line":9,"column":3,"nodeType":"236","messageId":"237","endLine":9,"endColumn":18},{"ruleId":"234","severity":1,"message":"251","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"255","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"256","line":3,"column":24,"nodeType":"236","messageId":"237","endLine":3,"endColumn":27},{"ruleId":"234","severity":1,"message":"257","line":3,"column":29,"nodeType":"236","messageId":"237","endLine":3,"endColumn":32},{"ruleId":"234","severity":1,"message":"258","line":3,"column":34,"nodeType":"236","messageId":"237","endLine":3,"endColumn":42},{"ruleId":"234","severity":1,"message":"259","line":25,"column":11,"nodeType":"236","messageId":"237","endLine":25,"endColumn":22},{"ruleId":"234","severity":1,"message":"260","line":25,"column":24,"nodeType":"236","messageId":"237","endLine":25,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":57,"column":6,"nodeType":"263","endLine":57,"endColumn":61,"suggestions":"264"},{"ruleId":"234","severity":1,"message":"251","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"265","line":3,"column":18,"nodeType":"236","messageId":"237","endLine":3,"endColumn":21},{"ruleId":"234","severity":1,"message":"266","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"267","severity":2,"message":"268","line":33,"column":41,"nodeType":"236","messageId":"269","endLine":33,"endColumn":46},{"ruleId":"261","severity":1,"message":"262","line":38,"column":6,"nodeType":"263","endLine":38,"endColumn":37,"suggestions":"270"},{"ruleId":"267","severity":2,"message":"268","line":80,"column":40,"nodeType":"236","messageId":"269","endLine":80,"endColumn":45},{"ruleId":"234","severity":1,"message":"256","line":3,"column":24,"nodeType":"236","messageId":"237","endLine":3,"endColumn":27},{"ruleId":"234","severity":1,"message":"257","line":3,"column":29,"nodeType":"236","messageId":"237","endLine":3,"endColumn":32},{"ruleId":"261","severity":1,"message":"271","line":35,"column":6,"nodeType":"263","endLine":35,"endColumn":40,"suggestions":"272"},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],["273"],["274"],["273"],["274"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["273"],["274"],["273"],["274"],"'USER_UPDATE_RESET' is defined but never used.","'data' is assigned a value but never used.",["273"],["274"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'saveShippingAddress' is defined but never used.","'order' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Dropdown' is defined but never used.","'loadingRole' is assigned a value but never used.","'errorRole' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'Tab' is defined but never used.","'Role' is defined but never used.","no-undef","'Roles' is not defined.","undef",["276"],"React Hook useEffect has missing dependencies: 'success' and 'userInfo'. Either include them or remove the dependency array.",["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [dispatch, history, userId, successUpdate, user, roles, userInfo]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch, history, userDelete, userInfo]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, history, productCreate, success, userInfo]",{"range":"288","text":"289"},[1929,1984],"[dispatch, history, userId, successUpdate, user, roles, userInfo]",[1198,1229],"[dispatch, history, userDelete, userInfo]",[1304,1338],"[dispatch, history, productCreate, success, userInfo]"]