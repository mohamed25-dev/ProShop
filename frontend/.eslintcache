[{"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reportWebVitals.js":"1","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\App.js":"2","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\index.js":"3","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Footer.js":"4","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Header.js":"5","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Product.js":"6","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Rating.js":"7","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\HomeScreen.js":"8","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\store.js":"10","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Loader.js":"11","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\productConstants.js":"12","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\productActions.js":"13","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\CartScreen.js":"14","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\productReducers.js":"15","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\cartActions.js":"17","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\userConstants.js":"18","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\LoginScreen.js":"19","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\userActions.js":"20","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\userReducers.js":"21","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Message.js":"22","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\FormContainer.js":"23","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\cartConstants.js":"24","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\RgisterScreen.js":"25","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProfileScreen.js":"26","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ShippingScreen.js":"27","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PaymentScreen.js":"29","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\orderReducer.js":"31","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\orderAction.js":"32","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\orderConstants.js":"33","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderScreen.js":"34","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UsersListScreen.js":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":1676,"mtime":1608058776016,"results":"38","hashOfConfig":"37"},{"size":385,"mtime":1606718542940,"results":"39","hashOfConfig":"37"},{"size":356,"mtime":1606416340572,"results":"40","hashOfConfig":"37"},{"size":2592,"mtime":1608112406156,"results":"41","hashOfConfig":"37"},{"size":840,"mtime":1606728557371,"results":"42","hashOfConfig":"37"},{"size":1805,"mtime":1606467938294,"results":"43","hashOfConfig":"37"},{"size":1105,"mtime":1607844416132,"results":"44","hashOfConfig":"37"},{"size":3373,"mtime":1607844448138,"results":"45","hashOfConfig":"37"},{"size":2081,"mtime":1608114313288,"results":"46","hashOfConfig":"37"},{"size":413,"mtime":1606746418066,"results":"47","hashOfConfig":"37"},{"size":374,"mtime":1606726547189,"results":"48","hashOfConfig":"37"},{"size":1219,"mtime":1606726927437,"results":"49","hashOfConfig":"37"},{"size":3690,"mtime":1607848867357,"results":"50","hashOfConfig":"37"},{"size":1040,"mtime":1606740827193,"results":"51","hashOfConfig":"37"},{"size":1222,"mtime":1607235765101,"results":"52","hashOfConfig":"37"},{"size":1350,"mtime":1607849186385,"results":"53","hashOfConfig":"37"},{"size":1308,"mtime":1608114208736,"results":"54","hashOfConfig":"37"},{"size":2217,"mtime":1607069437563,"results":"55","hashOfConfig":"37"},{"size":5373,"mtime":1608121190691,"results":"56","hashOfConfig":"37"},{"size":2991,"mtime":1608117420234,"results":"57","hashOfConfig":"37"},{"size":256,"mtime":1606722592995,"results":"58","hashOfConfig":"37"},{"size":352,"mtime":1607019156033,"results":"59","hashOfConfig":"37"},{"size":244,"mtime":1607235620594,"results":"60","hashOfConfig":"37"},{"size":3647,"mtime":1607084682177,"results":"61","hashOfConfig":"37"},{"size":6300,"mtime":1608011397346,"results":"62","hashOfConfig":"37"},{"size":2644,"mtime":1607234760906,"results":"63","hashOfConfig":"37"},{"size":1302,"mtime":1607234605230,"results":"64","hashOfConfig":"37"},{"size":1843,"mtime":1607235977402,"results":"65","hashOfConfig":"37"},{"size":5044,"mtime":1607883225891,"results":"66","hashOfConfig":"37"},{"size":2077,"mtime":1608011677587,"results":"67","hashOfConfig":"37"},{"size":3344,"mtime":1607970995889,"results":"68","hashOfConfig":"37"},{"size":818,"mtime":1608011617865,"results":"69","hashOfConfig":"37"},{"size":5442,"mtime":1607935306837,"results":"70","hashOfConfig":"37"},{"size":3285,"mtime":1608121349945,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"glfxjd",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reportWebVitals.js",[],["154","155"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\App.js",[],["156","157"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\index.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Footer.js",[],["158","159"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Header.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Product.js",[],["160","161"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Rating.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProductScreen.js",["162","163"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { listProductDetails } from '../actions/productActions';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match, dispatch]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>${product.price}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={product.countInStock === 0}\r\n                  onClick={addToCartHandler}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n              {product.quantityInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={qty}\r\n                        onChange={(e) => setQty(e.target.value)}\r\n                      >\r\n                        {[...Array(product.quantityInStock).keys()].map((i) => (\r\n                          <option key={i + 1} value={i + 1}>\r\n                            {i + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\store.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Loader.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\productActions.js",[],["164","165"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\cartReducers.js",[],["166","167"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\userActions.js",["168"],"import axios from 'axios';\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAIL,\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_ME_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_ME_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, mobileNubmber, password) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, mobile_number: mobileNubmber, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch('/api/users/profile', user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/${userId}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\Message.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\cartConstants.js",[],["169","170"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\RgisterScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ProfileScreen.js",["171"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderAction';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMe = useSelector((state) => state.orderListMe);\r\n  const { loading: ordersLoading, error: ordersError, orders } = orderListMe;\r\n\r\n  let totalPrice = 0;\r\n  if (!ordersLoading) {\r\n    orders.map((order) => {\r\n      const itemsPrice = order.items.reduce(\r\n        (acc, item) => acc + Number(item.unitPrice),\r\n        0\r\n      );\r\n      totalPrice =\r\n        Number(itemsPrice) +\r\n        Number(order.shippingPrice) +\r\n        Number(order.taxPrice);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setMobileNumber(user.mobile_number);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      //Dispatch Update Profile\r\n      dispatch(\r\n        updateUserProfile({ id: user.id, name, email, mobileNumber, password })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"mobile\">\r\n            <Form.Label>Mobile Number</Form.Label>\r\n            <Form.Control\r\n              type=\"mobile\"\r\n              placeholder=\"Enter Mobile Number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My Orders</h2>\r\n        {ordersLoading ? (\r\n          <Loader />\r\n        ) : ordersError ? (\r\n          <Message variant=\"danger\"> {ordersError}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => {\r\n                const itemsPrice = order.items.reduce(\r\n                  (acc, item) => acc + Number(item.unitPrice),\r\n                  0\r\n                );\r\n                totalPrice =\r\n                  Number(itemsPrice) +\r\n                  Number(order.shippingPrice) +\r\n                  Number(order.taxPrice);\r\n\r\n                return (\r\n                  <tr key={order.id}>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{totalPrice}</td>\r\n                    <td>\r\n                      {order.statusId === 1\r\n                        ? 'Created'\r\n                        : order.statusId === 2\r\n                        ? 'Paid'\r\n                        : 'Delivered'}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order.id}`}>\r\n                        <Button variant=\"info\" className=\"btn-sm\">\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["172","173","174"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckOutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderAction';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 25);\r\n  cart.taxPrice = addDecimals(cart.itemsPrice * 0.12);\r\n\r\n  cart.totalPrice = addDecimals(\r\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n  );\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      // history.push('/');\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = (e) => {\r\n    let data = cart.cartItems.map((item) => {\r\n      return {\r\n        productId: item.product,\r\n        unitPrice: item.price,\r\n        quantity: item.qty,\r\n      };\r\n    });\r\n\r\n    dispatch(createOrder(data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckOutSteps step1 step2 step3 step4 />\r\n      <h1>Place Order</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {success && <Message>Order Created</Message>}\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"warning\">Your Cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item Key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = {item.qty} * {item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\actions\\orderAction.js",["175"],"import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_ME_SUCCESS,\r\n  ORDER_LIST_ME_REQUEST,\r\n  ORDER_LIST_ME_FAIL,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (orderItems) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/orders', orderItems, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${orderId}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(`/api/orders/${orderId}/pay`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_ME_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get('/api/orders/me', config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_ME_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_ME_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\projects\\nodejs\\pro-shop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\OrderScreen.js",["176","177"],"D:\\projects\\nodejs\\pro-shop\\frontend\\src\\screens\\UsersListScreen.js",["178","179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"181","replacedBy":"187"},{"ruleId":"183","replacedBy":"188"},{"ruleId":"181","replacedBy":"189"},{"ruleId":"183","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":21,"column":11,"nodeType":"193","messageId":"194","endLine":21,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":21,"column":20,"nodeType":"193","messageId":"194","endLine":21,"endColumn":25},{"ruleId":"181","replacedBy":"196"},{"ruleId":"183","replacedBy":"197"},{"ruleId":"181","replacedBy":"198"},{"ruleId":"183","replacedBy":"199"},{"ruleId":"191","severity":1,"message":"200","line":230,"column":13,"nodeType":"193","messageId":"194","endLine":230,"endColumn":17},{"ruleId":"181","replacedBy":"201"},{"ruleId":"183","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":35,"column":24,"nodeType":"205","messageId":"206","endLine":35,"endColumn":26},{"ruleId":"191","severity":1,"message":"207","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"208","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":29},{"ruleId":"191","severity":1,"message":"209","line":30,"column":11,"nodeType":"193","messageId":"194","endLine":30,"endColumn":16},{"ruleId":"191","severity":1,"message":"210","line":9,"column":3,"nodeType":"193","messageId":"194","endLine":9,"endColumn":18},{"ruleId":"191","severity":1,"message":"207","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"207","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"212","line":3,"column":18,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":38,"column":6,"nodeType":"215","endLine":38,"endColumn":37,"suggestions":"216"},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],["217"],["218"],["217"],["218"],["217"],["218"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["217"],["218"],["217"],["218"],"'data' is assigned a value but never used.",["217"],["218"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'saveShippingAddress' is defined but never used.","'order' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","'Tab' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [dispatch, history, userDelete, userInfo]",{"range":"222","text":"223"},[1199,1230],"[dispatch, history, userDelete, userInfo]"]